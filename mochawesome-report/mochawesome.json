{
  "stats": {
    "suites": 17,
    "tests": 45,
    "passes": 45,
    "pending": 0,
    "failures": 0,
    "start": "2020-12-13T19:17:30.666Z",
    "end": "2020-12-13T19:17:50.458Z",
    "duration": 19792,
    "testsRegistered": 45,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "712be190-96e0-48ec-8fa4-77489757678c",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6f153daa-093c-4c03-9f4e-26a520abaa6e",
          "title": "Auth",
          "fullFile": "C:\\Course\\2.Express & PostgreSQL setup\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4106bf6e-facf-4a3c-b85a-6a052541da41",
              "title": "send OTP",
              "fullFile": "C:\\Course\\2.Express & PostgreSQL setup\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Error - less than 10 digit mobile number as input",
                  "fullTitle": "Auth send OTP Error - less than 10 digit mobile number as input",
                  "timedOut": false,
                  "duration": 156,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/auth/sentotp\")\n  .set(\"content-type\", \"application/x-www-form-urlencoded\")\n  .send({ mobile_number: 1 })\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "bc9728cb-3430-4d0e-97e6-7bb46a32bed4",
                  "parentUUID": "4106bf6e-facf-4a3c-b85a-6a052541da41",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Error - greater than 10 digit mobile number as input",
                  "fullTitle": "Auth send OTP Error - greater than 10 digit mobile number as input",
                  "timedOut": false,
                  "duration": 42,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/auth/sentotp\")\n  .set(\"content-type\", \"application/x-www-form-urlencoded\")\n  .send({ mobile_number: 12345678910 })\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "6d0723a6-0ded-4753-b712-6d8c91df1a37",
                  "parentUUID": "4106bf6e-facf-4a3c-b85a-6a052541da41",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Error - no mobile_number as input",
                  "fullTitle": "Auth send OTP Error - no mobile_number as input",
                  "timedOut": false,
                  "duration": 50,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/auth/sentotp\")\n  .set(\"content-type\", \"application/x-www-form-urlencoded\")\n  .send()\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "8e936534-65d2-4acc-8133-b1cca2e036f3",
                  "parentUUID": "4106bf6e-facf-4a3c-b85a-6a052541da41",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Error - passing alphabets as mobile number",
                  "fullTitle": "Auth send OTP Error - passing alphabets as mobile number",
                  "timedOut": false,
                  "duration": 50,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/auth/sentotp\")\n  .set(\"content-type\", \"application/x-www-form-urlencoded\")\n  .send({ mobile_number: \"abcdefg\" })\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "63f86771-6241-4e88-936d-dccfd68f77d8",
                  "parentUUID": "4106bf6e-facf-4a3c-b85a-6a052541da41",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Success - 10 digit mobile number as input",
                  "fullTitle": "Auth send OTP Success - 10 digit mobile number as input",
                  "timedOut": false,
                  "duration": 5076,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/auth/sentotp\")\n  .set(\"content-type\", \"application/x-www-form-urlencoded\")\n  .send({ mobile_number: 9590858700 })\n  .end((err, res) => {\n    res.should.have.status(200);\n    done();\n  });",
                  "err": {},
                  "uuid": "2e61d00f-e5d2-4f1f-a46f-8056b291a518",
                  "parentUUID": "4106bf6e-facf-4a3c-b85a-6a052541da41",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bc9728cb-3430-4d0e-97e6-7bb46a32bed4",
                "6d0723a6-0ded-4753-b712-6d8c91df1a37",
                "8e936534-65d2-4acc-8133-b1cca2e036f3",
                "63f86771-6241-4e88-936d-dccfd68f77d8",
                "2e61d00f-e5d2-4f1f-a46f-8056b291a518"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5374,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4999f115-1d5a-497c-999d-8b21c158b143",
              "title": "verify OTP",
              "fullFile": "C:\\Course\\2.Express & PostgreSQL setup\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Error - 10 digit mobile number as input and a random otp",
                  "fullTitle": "Auth verify OTP Error - 10 digit mobile number as input and a random otp",
                  "timedOut": false,
                  "duration": 319,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/auth/verifyotp\")\n  .set(\"content-type\", \"application/x-www-form-urlencoded\")\n  .send({ mobile_number: 9597908587, otp: 1234 })\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "ec3e4ca7-31ec-40f6-ab59-5b43bbc0a205",
                  "parentUUID": "4999f115-1d5a-497c-999d-8b21c158b143",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Error - less than 10 digit mobile number as input",
                  "fullTitle": "Auth verify OTP Error - less than 10 digit mobile number as input",
                  "timedOut": false,
                  "duration": 37,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/auth/verifyotp\")\n  .set(\"content-type\", \"application/x-www-form-urlencoded\")\n  .send({ mobile_number: 959790858, otp: 1234 })\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "a8a85be6-6d17-47cf-8a38-88b104c75946",
                  "parentUUID": "4999f115-1d5a-497c-999d-8b21c158b143",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Error - greater than 10 digit mobile number as input",
                  "fullTitle": "Auth verify OTP Error - greater than 10 digit mobile number as input",
                  "timedOut": false,
                  "duration": 53,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/auth/verifyotp\")\n  .set(\"content-type\", \"application/x-www-form-urlencoded\")\n  .send({ mobile_number: 95979085879, otp: 1234 })\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "d8f3d994-2ebe-4431-8838-7ed5e274aff1",
                  "parentUUID": "4999f115-1d5a-497c-999d-8b21c158b143",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Error - no mobile_number as input",
                  "fullTitle": "Auth verify OTP Error - no mobile_number as input",
                  "timedOut": false,
                  "duration": 50,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/auth/verifyotp\")\n  .set(\"content-type\", \"application/x-www-form-urlencoded\")\n  .send({ mobile_number: 95979085879, otp: 1234 })\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "6eb869ac-7fc3-42ec-b5dc-5429968a34f0",
                  "parentUUID": "4999f115-1d5a-497c-999d-8b21c158b143",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Error - 10 digit mobile number as input and  without otp",
                  "fullTitle": "Auth verify OTP Error - 10 digit mobile number as input and  without otp",
                  "timedOut": false,
                  "duration": 78,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/auth/verifyotp\")\n  .set(\"content-type\", \"application/x-www-form-urlencoded\")\n  .send({ mobile_number: 95979085879 })\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "9512f1ca-7c30-4674-b759-33207fdb3342",
                  "parentUUID": "4999f115-1d5a-497c-999d-8b21c158b143",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Error - 10 digit mobile number as input and  3 digit otp",
                  "fullTitle": "Auth verify OTP Error - 10 digit mobile number as input and  3 digit otp",
                  "timedOut": false,
                  "duration": 34,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/auth/verifyotp\")\n  .set(\"content-type\", \"application/x-www-form-urlencoded\")\n  .send({ mobile_number: 95979085879, otp: 123 })\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "ad47867d-565a-4005-aa9a-7c8a8c6149b3",
                  "parentUUID": "4999f115-1d5a-497c-999d-8b21c158b143",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Error - 10 digit mobile number as input and  5 digit otp",
                  "fullTitle": "Auth verify OTP Error - 10 digit mobile number as input and  5 digit otp",
                  "timedOut": false,
                  "duration": 37,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/auth/verifyotp\")\n  .set(\"content-type\", \"application/x-www-form-urlencoded\")\n  .send({ mobile_number: 95979085879, otp: 12345 })\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "ec336c38-c8e6-4b5d-b42a-91d91e45e72b",
                  "parentUUID": "4999f115-1d5a-497c-999d-8b21c158b143",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ec3e4ca7-31ec-40f6-ab59-5b43bbc0a205",
                "a8a85be6-6d17-47cf-8a38-88b104c75946",
                "d8f3d994-2ebe-4431-8838-7ed5e274aff1",
                "6eb869ac-7fc3-42ec-b5dc-5429968a34f0",
                "9512f1ca-7c30-4674-b759-33207fdb3342",
                "ad47867d-565a-4005-aa9a-7c8a8c6149b3",
                "ec336c38-c8e6-4b5d-b42a-91d91e45e72b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 608,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "43aba8d2-8088-4254-b167-c717cdda3b68",
              "title": "Refresh Token",
              "fullFile": "C:\\Course\\2.Express & PostgreSQL setup\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Error - Without refreshtoken",
                  "fullTitle": "Auth Refresh Token Error - Without refreshtoken",
                  "timedOut": false,
                  "duration": 37,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/auth/refreshtoken\")\n  .set(\"content-type\", \"application/x-www-form-urlencoded\")\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "1451f421-6492-4804-930f-0829b4e3740f",
                  "parentUUID": "43aba8d2-8088-4254-b167-c717cdda3b68",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Error - Invalid refreshtoken",
                  "fullTitle": "Auth Refresh Token Error - Invalid refreshtoken",
                  "timedOut": false,
                  "duration": 322,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/auth/refreshtoken\")\n  .set(\"content-type\", \"application/x-www-form-urlencoded\")\n  .send({ refresh_token: \"refreshtoken \" })\n  .end((err, res) => {\n    res.should.have.status(403);\n    done();\n  });",
                  "err": {},
                  "uuid": "bcf4ab30-35e4-4876-9905-b1be4fc6064a",
                  "parentUUID": "43aba8d2-8088-4254-b167-c717cdda3b68",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1451f421-6492-4804-930f-0829b4e3740f",
                "bcf4ab30-35e4-4876-9905-b1be4fc6064a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 359,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8f2400e5-9d30-48ba-b413-829d780ff971",
          "title": "Services",
          "fullFile": "C:\\Course\\2.Express & PostgreSQL setup\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "d9425bc5-0862-4c7d-9549-62ce8706725c",
              "title": "Get all Services",
              "fullFile": "C:\\Course\\2.Express & PostgreSQL setup\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Success - Get all services",
                  "fullTitle": "Services Get all Services Success - Get all services",
                  "timedOut": false,
                  "duration": 1164,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .get(\"/service/getallservices\")\n  .end((err, res) => {\n    res.should.have.status(200);\n    res.body.data.should.be.an(\"array\");\n    done();\n  });",
                  "err": {},
                  "uuid": "c251af1b-5977-4d7b-85ad-6d1cd163b303",
                  "parentUUID": "d9425bc5-0862-4c7d-9549-62ce8706725c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c251af1b-5977-4d7b-85ad-6d1cd163b303"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1164,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d0912422-4284-4122-8ca3-df210de0c221",
              "title": "Add a service",
              "fullFile": "C:\\Course\\2.Express & PostgreSQL setup\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Error - without name while adding a service",
                  "fullTitle": "Services Add a service Error - without name while adding a service",
                  "timedOut": false,
                  "duration": 56,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/service/addaservice\")\n  .set(\"content-type\", \"application/x-www-form-urlencoded\")\n  .send({\n    description: faker.commerce.productDescription(),\n    image_url: faker.image.imageUrl(),\n  })\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "1e1a6f37-602b-4186-81a6-2d093125c2f4",
                  "parentUUID": "d0912422-4284-4122-8ca3-df210de0c221",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Error - without description while adding a service",
                  "fullTitle": "Services Add a service Error - without description while adding a service",
                  "timedOut": false,
                  "duration": 53,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/service/addaservice\")\n  .set(\"content-type\", \"application/x-www-form-urlencoded\")\n  .send({\n    name: faker.internet.userName(),\n    image_url: faker.image.imageUrl(),\n  })\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "880c77bb-2ef3-4a5e-a0bb-3f44fbe5f051",
                  "parentUUID": "d0912422-4284-4122-8ca3-df210de0c221",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Error - without Image_url while adding a service",
                  "fullTitle": "Services Add a service Error - without Image_url while adding a service",
                  "timedOut": false,
                  "duration": 88,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/service/addaservice\")\n  .set(\"content-type\", \"application/x-www-form-urlencoded\")\n  .send({\n    name: faker.internet.userName,\n    description: faker.commerce.productDescription,\n  })\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "52bedba1-e13e-4476-879e-0d27f358fd04",
                  "parentUUID": "d0912422-4284-4122-8ca3-df210de0c221",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Success - Adding a service",
                  "fullTitle": "Services Add a service Success - Adding a service",
                  "timedOut": false,
                  "duration": 442,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/service/addaservice\")\n  .set(\"content-type\", \"application/x-www-form-urlencoded\")\n  .send({\n    name: faker.internet.userName(),\n    description: faker.commerce.productDescription(),\n    image_url: faker.image.imageUrl(),\n  })\n  .end((err, res) => {\n    res.should.have.status(200);\n    done();\n  });",
                  "err": {},
                  "uuid": "e3645806-c078-4204-a236-c5427c8feaee",
                  "parentUUID": "d0912422-4284-4122-8ca3-df210de0c221",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1e1a6f37-602b-4186-81a6-2d093125c2f4",
                "880c77bb-2ef3-4a5e-a0bb-3f44fbe5f051",
                "52bedba1-e13e-4476-879e-0d27f358fd04",
                "e3645806-c078-4204-a236-c5427c8feaee"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 639,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5ddd499c-14a1-443b-af56-01c9be780f34",
              "title": "Edit a service",
              "fullFile": "C:\\Course\\2.Express & PostgreSQL setup\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Error - without name while updating a service",
                  "fullTitle": "Services Edit a service Error - without name while updating a service",
                  "timedOut": false,
                  "duration": 38,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .put(`/service/editaservice/${Math.round(Math.random() * 10)}`)\n  .set(\"content-type\", \"application/x-www-form-urlencoded\")\n  .send({\n    description: faker.commerce.productDescription(),\n    image_url: faker.image.imageUrl(),\n  })\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "4e465500-75f1-4a7e-b0ed-92fdb81c4e52",
                  "parentUUID": "5ddd499c-14a1-443b-af56-01c9be780f34",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Error - without description while updating a service",
                  "fullTitle": "Services Edit a service Error - without description while updating a service",
                  "timedOut": false,
                  "duration": 48,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .put(`/service/editaservice/${Math.round(Math.random() * 10)}`)\n  .set(\"content-type\", \"application/x-www-form-urlencoded\")\n  .send({\n    name: faker.internet.userName(),\n    image_url: faker.image.imageUrl(),\n  })\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "c14d9970-80fb-4404-b7bc-972a35fa2e86",
                  "parentUUID": "5ddd499c-14a1-443b-af56-01c9be780f34",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Error - without Image_url while updating a service",
                  "fullTitle": "Services Edit a service Error - without Image_url while updating a service",
                  "timedOut": false,
                  "duration": 51,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .put(`/service/editaservice/${Math.round(Math.random() * 10)}`)\n  .set(\"content-type\", \"application/x-www-form-urlencoded\")\n  .send({\n    name: faker.internet.userName(),\n    description: faker.commerce.productDescription(),\n  })\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "1295f097-3347-47a8-acc7-08580734edb9",
                  "parentUUID": "5ddd499c-14a1-443b-af56-01c9be780f34",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Success - updating a service",
                  "fullTitle": "Services Edit a service Success - updating a service",
                  "timedOut": false,
                  "duration": 802,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "models.services\n  .create({\n    name: faker.internet.userName(),\n    description: faker.commerce.productDescription(),\n    image_url: faker.image.imageUrl(),\n  })\n  .then((success) => {\n    const dataObj = success.get({ plain: true });\n    chai\n      .request(Server)\n      .put(`/service/editaservice/${dataObj.id}`)\n      .set(\"content-type\", \"application/x-www-form-urlencoded\")\n      .send({\n        name: faker.internet.userName(),\n        description: faker.commerce.productDescription(),\n        image_url: faker.image.imageUrl(),\n      })\n      .end((err, res) => {\n        res.should.have.status(200);\n        done();\n      });\n  })\n  .catch((err) => {\n    _8b2‍.g.console.error(err);\n  });",
                  "err": {},
                  "uuid": "c212338d-5ed6-45e3-adeb-f608b55d3a8a",
                  "parentUUID": "5ddd499c-14a1-443b-af56-01c9be780f34",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4e465500-75f1-4a7e-b0ed-92fdb81c4e52",
                "c14d9970-80fb-4404-b7bc-972a35fa2e86",
                "1295f097-3347-47a8-acc7-08580734edb9",
                "c212338d-5ed6-45e3-adeb-f608b55d3a8a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 939,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e6cb2329-065d-484a-9370-ee34d6999b75",
              "title": "Delete a service",
              "fullFile": "C:\\Course\\2.Express & PostgreSQL setup\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Error - Delete a services with random service",
                  "fullTitle": "Services Delete a service Error - Delete a services with random service",
                  "timedOut": false,
                  "duration": 318,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .delete(\"/service/deleteaservice/12345\")\n  .end((err, res) => {\n    res.should.have.status(404);\n    done();\n  });",
                  "err": {},
                  "uuid": "d5a1c5c7-2596-47ba-9b7f-96630150249b",
                  "parentUUID": "e6cb2329-065d-484a-9370-ee34d6999b75",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Success - Delete a services ",
                  "fullTitle": "Services Delete a service Success - Delete a services ",
                  "timedOut": false,
                  "duration": 957,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "models.services\n  .create({\n    name: faker.internet.userName(),\n    description: faker.commerce.productDescription(),\n    image_url: faker.image.imageUrl(),\n  })\n  .then((success) => {\n    const dataObj = success.get({ plain: true });\n    chai\n      .request(Server)\n      .delete(`/service/deleteaservice/${dataObj.id}`)\n      .end((err, res) => {\n        res.should.have.status(200);\n        done();\n      });\n  });",
                  "err": {},
                  "uuid": "94fefc2b-1f8f-4df9-bd49-83171e2c643d",
                  "parentUUID": "e6cb2329-065d-484a-9370-ee34d6999b75",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d5a1c5c7-2596-47ba-9b7f-96630150249b",
                "94fefc2b-1f8f-4df9-bd49-83171e2c643d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1275,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "62b3d51e-1c06-4d93-b78b-c3247bfe2157",
              "title": "Get a service based on id",
              "fullFile": "C:\\Course\\2.Express & PostgreSQL setup\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Error - Random number for getting service",
                  "fullTitle": "Services Get a service based on id Error - Random number for getting service",
                  "timedOut": false,
                  "duration": 320,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .delete(\"/service/deleteaservice/12345\")\n  .end((err, res) => {\n    res.should.have.status(404);\n    done();\n  });",
                  "err": {},
                  "uuid": "5edb982e-e5ae-4fb1-abed-e4e26d76ebc8",
                  "parentUUID": "62b3d51e-1c06-4d93-b78b-c3247bfe2157",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Error - Random number for getting service",
                  "fullTitle": "Services Get a service based on id Error - Random number for getting service",
                  "timedOut": false,
                  "duration": 959,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "models.services\n  .create({\n    name: faker.internet.userName(),\n    description: faker.commerce.productDescription(),\n    image_url: faker.image.imageUrl(),\n  })\n  .then((success) => {\n    const dataObj = success.get({ plain: true });\n    chai\n      .request(Server)\n      .get(`/service/getservicebyid/${dataObj.id}`)\n      .end((err, res) => {\n        res.should.have.status(200);\n        done();\n      });\n  });",
                  "err": {},
                  "uuid": "a580bc19-09a2-44a9-bd17-40d7538c28dd",
                  "parentUUID": "62b3d51e-1c06-4d93-b78b-c3247bfe2157",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5edb982e-e5ae-4fb1-abed-e4e26d76ebc8",
                "a580bc19-09a2-44a9-bd17-40d7538c28dd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1279,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0205d48b-1d84-4fb8-9533-7933ee894266",
              "title": "Clear Testing datas",
              "fullFile": "C:\\Course\\2.Express & PostgreSQL setup\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Clear PostgreSQL services",
                  "fullTitle": "Services Clear Testing datas Clear PostgreSQL services",
                  "timedOut": false,
                  "duration": 314,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "models.services.destroy({ where: {}, truncate: true }).then((res) => {\n  done();\n});",
                  "err": {},
                  "uuid": "09d79236-d031-4fc0-abfb-08bdd2432d3e",
                  "parentUUID": "0205d48b-1d84-4fb8-9533-7933ee894266",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "09d79236-d031-4fc0-abfb-08bdd2432d3e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 314,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "db61545a-7852-4dc8-b8fb-e1323a438578",
          "title": "Bookings",
          "fullFile": "C:\\Course\\2.Express & PostgreSQL setup\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "002576ab-4c71-4198-b790-044481b973d1",
              "title": "Gett all Bookings",
              "fullFile": "C:\\Course\\2.Express & PostgreSQL setup\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Success - Get all Bookings",
                  "fullTitle": "Bookings Gett all Bookings Success - Get all Bookings",
                  "timedOut": false,
                  "duration": 673,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/booking/getallbooking\")\n  .send({\n    limit: 5,\n    offset: 0,\n  })\n  .end((err, res) => {\n    res.should.have.status(200);\n    done();\n  });",
                  "err": {},
                  "uuid": "1e914959-8d11-49f8-b799-15dc6a93e794",
                  "parentUUID": "002576ab-4c71-4198-b790-044481b973d1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Error - Get all services without limit",
                  "fullTitle": "Bookings Gett all Bookings Error - Get all services without limit",
                  "timedOut": false,
                  "duration": 45,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/booking/getallbooking\")\n  .set({ \"x-auth-token\": token })\n  .send({\n    offset: 0,\n  })\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "889af4a4-a87c-4ce1-b2be-c9fa22987f42",
                  "parentUUID": "002576ab-4c71-4198-b790-044481b973d1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Error - Get all services without offset",
                  "fullTitle": "Bookings Gett all Bookings Error - Get all services without offset",
                  "timedOut": false,
                  "duration": 47,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/booking/getallbooking\")\n  .set({ \"x-auth-token\": token })\n  .send({\n    limit: 5,\n  })\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "41f65cf9-d75a-47a9-b409-51767c841a08",
                  "parentUUID": "002576ab-4c71-4198-b790-044481b973d1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1e914959-8d11-49f8-b799-15dc6a93e794",
                "889af4a4-a87c-4ce1-b2be-c9fa22987f42",
                "41f65cf9-d75a-47a9-b409-51767c841a08"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 765,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "fad5fa16-7801-4ce8-8c54-81713cc36435",
              "title": "Book a service",
              "fullFile": "C:\\Course\\2.Express & PostgreSQL setup\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Success - Booking a service with token",
                  "fullTitle": "Bookings Book a service Success - Booking a service with token",
                  "timedOut": false,
                  "duration": 1150,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/booking/bookaservice\")\n  .set({ \"x-auth-token\": token })\n  .send({\n    service_name: \"Cleaning\",\n    location: faker.address.streetAddress(),\n    location_type: \"Home\",\n  })\n  .end((err, res) => {\n    res.should.have.status(200);\n    done();\n  });",
                  "err": {},
                  "uuid": "f7455240-b943-4059-ae76-76c83ed607fa",
                  "parentUUID": "fad5fa16-7801-4ce8-8c54-81713cc36435",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Error - Booking a service without token",
                  "fullTitle": "Bookings Book a service Error - Booking a service without token",
                  "timedOut": false,
                  "duration": 39,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/booking/bookaservice\")\n  .send({\n    service_name: \"Cleaning\",\n    location: faker.address.streetAddress(),\n    location_type: \"Home\",\n  })\n  .end((err, res) => {\n    res.should.have.status(401);\n    done();\n  });",
                  "err": {},
                  "uuid": "7bfc64c3-0207-4865-ad8a-7ed5834afa4b",
                  "parentUUID": "fad5fa16-7801-4ce8-8c54-81713cc36435",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Error - Booking a service with out service name",
                  "fullTitle": "Bookings Book a service Error - Booking a service with out service name",
                  "timedOut": false,
                  "duration": 599,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/booking/bookaservice\")\n  .set({ \"x-auth-token\": token })\n  .send({\n    location: faker.address.streetAddress(),\n    location_type: \"Home\",\n  })\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "c20fd62f-8c57-4676-bd18-38711688dde8",
                  "parentUUID": "fad5fa16-7801-4ce8-8c54-81713cc36435",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Error - Booking a service with out location",
                  "fullTitle": "Bookings Book a service Error - Booking a service with out location",
                  "timedOut": false,
                  "duration": 604,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/booking/bookaservice\")\n  .set({ \"x-auth-token\": token })\n  .send({\n    service_name: \"Cleaning\",\n    location_type: \"Home\",\n  })\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "d74e2b90-cf9b-4030-8177-1d33461160bb",
                  "parentUUID": "fad5fa16-7801-4ce8-8c54-81713cc36435",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Error - Booking a service with out location type",
                  "fullTitle": "Bookings Book a service Error - Booking a service with out location type",
                  "timedOut": false,
                  "duration": 336,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/booking/bookaservice\")\n  .set({ \"x-auth-token\": token })\n  .send({\n    service_name: \"Cleaning\",\n    location: faker.address.streetAddress(),\n  })\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "c907cf9d-e836-40b0-9097-d7aa85be1cf2",
                  "parentUUID": "fad5fa16-7801-4ce8-8c54-81713cc36435",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f7455240-b943-4059-ae76-76c83ed607fa",
                "7bfc64c3-0207-4865-ad8a-7ed5834afa4b",
                "c20fd62f-8c57-4676-bd18-38711688dde8",
                "d74e2b90-cf9b-4030-8177-1d33461160bb",
                "c907cf9d-e836-40b0-9097-d7aa85be1cf2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2728,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "45f324b6-544d-4456-b3c0-a8c363d10eaa",
              "title": "Get Booking history for a user",
              "fullFile": "C:\\Course\\2.Express & PostgreSQL setup\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Success - Get all booking history of the user with token",
                  "fullTitle": "Bookings Get Booking history for a user Success - Get all booking history of the user with token",
                  "timedOut": false,
                  "duration": 985,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/booking/getbookinghistorybyid\")\n  .set({ \"x-auth-token\": token })\n  .send({\n    limit: 5,\n    offset: 0,\n  })\n  .end((err, res) => {\n    res.should.have.status(200);\n    res.body.data.rows.should.be.an(\"array\");\n    done();\n  });",
                  "err": {},
                  "uuid": "ebfb558d-e2e7-4574-ae70-f0c8d0915e2b",
                  "parentUUID": "45f324b6-544d-4456-b3c0-a8c363d10eaa",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Error - Get all booking history of the user without token",
                  "fullTitle": "Bookings Get Booking history for a user Error - Get all booking history of the user without token",
                  "timedOut": false,
                  "duration": 38,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/booking/getbookinghistorybyid\")\n  .send({\n    limit: 5,\n    offset: 0,\n  })\n  .end((err, res) => {\n    res.should.have.status(401);\n    done();\n  });",
                  "err": {},
                  "uuid": "320e65ef-916a-486f-a413-c2477f25181c",
                  "parentUUID": "45f324b6-544d-4456-b3c0-a8c363d10eaa",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Error - Get all booking history of the user without limit",
                  "fullTitle": "Bookings Get Booking history for a user Error - Get all booking history of the user without limit",
                  "timedOut": false,
                  "duration": 339,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/booking/getbookinghistorybyid\")\n  .set({ \"x-auth-token\": token })\n  .send({\n    offset: 0,\n  })\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "7e34dad7-72db-401f-811b-ff1fc8d3b6de",
                  "parentUUID": "45f324b6-544d-4456-b3c0-a8c363d10eaa",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Error - Get all booking history of the user without offset",
                  "fullTitle": "Bookings Get Booking history for a user Error - Get all booking history of the user without offset",
                  "timedOut": false,
                  "duration": 892,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .post(\"/booking/getbookinghistorybyid\")\n  .set({ \"x-auth-token\": token })\n  .send({\n    limit: 5,\n  })\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "b6502fe3-ef8c-43de-877d-0737f7adc251",
                  "parentUUID": "45f324b6-544d-4456-b3c0-a8c363d10eaa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ebfb558d-e2e7-4574-ae70-f0c8d0915e2b",
                "320e65ef-916a-486f-a413-c2477f25181c",
                "7e34dad7-72db-401f-811b-ff1fc8d3b6de",
                "b6502fe3-ef8c-43de-877d-0737f7adc251"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2254,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b66b6725-0926-466f-b893-80847198aac4",
              "title": "Update a booking",
              "fullFile": "C:\\Course\\2.Express & PostgreSQL setup\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Success - update a service",
                  "fullTitle": "Bookings Update a booking Success - update a service",
                  "timedOut": false,
                  "duration": 1283,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "models.user_booking_history\n  .create({\n    service_name: \"Car\",\n    location: faker.address.streetAddress(),\n    location_type: \"Home\",\n  })\n  .then((success) => {\n    let raw = success.get({ plain: true });\n    chai\n      .request(Server)\n      .put(`/booking/updateabookingbyid/${raw.id}`)\n      .set({ \"x-auth-token\": token })\n      .send({\n        service_name: \"Bike\",\n        location: faker.address.streetAddress(),\n        location_type: \"Home\",\n      })\n      .end((err, res) => {\n        res.should.have.status(200);\n        done();\n      });\n  });",
                  "err": {},
                  "uuid": "e525c3f1-b8d2-45aa-bf15-f6f4a5a93c11",
                  "parentUUID": "b66b6725-0926-466f-b893-80847198aac4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Error - update a booking without service name",
                  "fullTitle": "Bookings Update a booking Error - update a booking without service name",
                  "timedOut": false,
                  "duration": 44,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .put(`/booking/updateabookingbyid/12345`)\n  .set({ \"x-auth-token\": token })\n  .send({\n    location: faker.address.streetAddress(),\n    location_type: \"Home\",\n  })\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "a503df75-a934-4579-8d36-0aafd1c3a79b",
                  "parentUUID": "b66b6725-0926-466f-b893-80847198aac4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Error - update a booking without location",
                  "fullTitle": "Bookings Update a booking Error - update a booking without location",
                  "timedOut": false,
                  "duration": 46,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .put(`/booking/updateabookingbyid/12345`)\n  .set({ \"x-auth-token\": token })\n  .send({\n    service_name: \"Cleaning\",\n    location_type: \"Home\",\n  })\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "12051bc7-5958-47ef-80b3-24f16bc38c95",
                  "parentUUID": "b66b6725-0926-466f-b893-80847198aac4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Error - update a booking without location type",
                  "fullTitle": "Bookings Update a booking Error - update a booking without location type",
                  "timedOut": false,
                  "duration": 61,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(Server)\n  .put(`/booking/updateabookingbyid/12345`)\n  .set({ \"x-auth-token\": token })\n  .send({\n    service_name: \"Cleaning\",\n    location: faker.address.streetAddress(),\n  })\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "15dc4f10-7cc2-48a3-8987-5fd2c16fceaf",
                  "parentUUID": "b66b6725-0926-466f-b893-80847198aac4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e525c3f1-b8d2-45aa-bf15-f6f4a5a93c11",
                "a503df75-a934-4579-8d36-0aafd1c3a79b",
                "12051bc7-5958-47ef-80b3-24f16bc38c95",
                "15dc4f10-7cc2-48a3-8987-5fd2c16fceaf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1434,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d36fe8e9-bc76-47fd-851f-4721c8532e9a",
              "title": "User Booking history model",
              "fullFile": "C:\\Course\\2.Express & PostgreSQL setup\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Clean Booking history model ",
                  "fullTitle": "Bookings User Booking history model Clean Booking history model ",
                  "timedOut": false,
                  "duration": 449,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "models.user_booking_history\n  .destroy({ where: {}, truncate: true })\n  .then((res) => {\n    done();\n  });",
                  "err": {},
                  "uuid": "6d5a494c-f70f-4e4f-aa7b-060734c5e8d1",
                  "parentUUID": "d36fe8e9-bc76-47fd-851f-4721c8532e9a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6d5a494c-f70f-4e4f-aa7b-060734c5e8d1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 449,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}